//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace QPMLinksoftwareNew.QPMGetId {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Config1Binding", Namespace="urn:IdPWsd/Config1")]
    public partial class IdP : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getImplicitIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImplicitIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProcessIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProcessIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPropIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPropIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPropVarIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPropVarIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVarIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVarIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMessageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IdP() {
            this.Url = global::QPMLinksoftwareNew.Properties.Settings.Default.QPMLinksoftwareNew_QPMGetId_IdP;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getImplicitIdCompletedEventHandler getImplicitIdCompleted;
        
        /// <remarks/>
        public event getImplicitIdsCompletedEventHandler getImplicitIdsCompleted;
        
        /// <remarks/>
        public event getProcessIdCompletedEventHandler getProcessIdCompleted;
        
        /// <remarks/>
        public event getProcessIdsCompletedEventHandler getProcessIdsCompleted;
        
        /// <remarks/>
        public event getPropIdCompletedEventHandler getPropIdCompleted;
        
        /// <remarks/>
        public event getPropIdsCompletedEventHandler getPropIdsCompleted;
        
        /// <remarks/>
        public event getPropVarIdCompletedEventHandler getPropVarIdCompleted;
        
        /// <remarks/>
        public event getPropVarIdsCompletedEventHandler getPropVarIdsCompleted;
        
        /// <remarks/>
        public event getVarIdCompletedEventHandler getVarIdCompleted;
        
        /// <remarks/>
        public event getVarIdsCompletedEventHandler getVarIdsCompleted;
        
        /// <remarks/>
        public event getMessageCompletedEventHandler getMessageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="urn:IdPVi", ResponseNamespace="urn:IdPVi", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Response")]
        public int getImplicitId(int mandant, int processId, int varId) {
            object[] results = this.Invoke("getImplicitId", new object[] {
                        mandant,
                        processId,
                        varId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getImplicitIdAsync(int mandant, int processId, int varId) {
            this.getImplicitIdAsync(mandant, processId, varId, null);
        }
        
        /// <remarks/>
        public void getImplicitIdAsync(int mandant, int processId, int varId, object userState) {
            if ((this.getImplicitIdOperationCompleted == null)) {
                this.getImplicitIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImplicitIdOperationCompleted);
            }
            this.InvokeAsync("getImplicitId", new object[] {
                        mandant,
                        processId,
                        varId}, this.getImplicitIdOperationCompleted, userState);
        }
        
        private void OngetImplicitIdOperationCompleted(object arg) {
            if ((this.getImplicitIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImplicitIdCompleted(this, new getImplicitIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="urn:IdPVi", ResponseNamespace="urn:IdPVi", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Response", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="urn:java/lang")]
        public System.Nullable<int>[] getImplicitIds(int mandant, int processId, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="urn:java/lang")] System.Nullable<int>[] varIds) {
            object[] results = this.Invoke("getImplicitIds", new object[] {
                        mandant,
                        processId,
                        varIds});
            return ((System.Nullable<int>[])(results[0]));
        }
        
        /// <remarks/>
        public void getImplicitIdsAsync(int mandant, int processId, System.Nullable<int>[] varIds) {
            this.getImplicitIdsAsync(mandant, processId, varIds, null);
        }
        
        /// <remarks/>
        public void getImplicitIdsAsync(int mandant, int processId, System.Nullable<int>[] varIds, object userState) {
            if ((this.getImplicitIdsOperationCompleted == null)) {
                this.getImplicitIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImplicitIdsOperationCompleted);
            }
            this.InvokeAsync("getImplicitIds", new object[] {
                        mandant,
                        processId,
                        varIds}, this.getImplicitIdsOperationCompleted, userState);
        }
        
        private void OngetImplicitIdsOperationCompleted(object arg) {
            if ((this.getImplicitIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImplicitIdsCompleted(this, new getImplicitIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="urn:IdPVi", ResponseNamespace="urn:IdPVi", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Response")]
        public int getProcessId(int mandant, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string alias) {
            object[] results = this.Invoke("getProcessId", new object[] {
                        mandant,
                        alias});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getProcessIdAsync(int mandant, string alias) {
            this.getProcessIdAsync(mandant, alias, null);
        }
        
        /// <remarks/>
        public void getProcessIdAsync(int mandant, string alias, object userState) {
            if ((this.getProcessIdOperationCompleted == null)) {
                this.getProcessIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProcessIdOperationCompleted);
            }
            this.InvokeAsync("getProcessId", new object[] {
                        mandant,
                        alias}, this.getProcessIdOperationCompleted, userState);
        }
        
        private void OngetProcessIdOperationCompleted(object arg) {
            if ((this.getProcessIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProcessIdCompleted(this, new getProcessIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="urn:IdPVi", ResponseNamespace="urn:IdPVi", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Response", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="urn:java/lang")]
        public System.Nullable<int>[] getProcessIds(int mandant, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("String", Namespace="urn:java/lang")] string[] aliases) {
            object[] results = this.Invoke("getProcessIds", new object[] {
                        mandant,
                        aliases});
            return ((System.Nullable<int>[])(results[0]));
        }
        
        /// <remarks/>
        public void getProcessIdsAsync(int mandant, string[] aliases) {
            this.getProcessIdsAsync(mandant, aliases, null);
        }
        
        /// <remarks/>
        public void getProcessIdsAsync(int mandant, string[] aliases, object userState) {
            if ((this.getProcessIdsOperationCompleted == null)) {
                this.getProcessIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProcessIdsOperationCompleted);
            }
            this.InvokeAsync("getProcessIds", new object[] {
                        mandant,
                        aliases}, this.getProcessIdsOperationCompleted, userState);
        }
        
        private void OngetProcessIdsOperationCompleted(object arg) {
            if ((this.getProcessIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProcessIdsCompleted(this, new getProcessIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="urn:IdPVi", ResponseNamespace="urn:IdPVi", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Response")]
        public int getPropId(int mandant, int processId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string alias) {
            object[] results = this.Invoke("getPropId", new object[] {
                        mandant,
                        processId,
                        alias});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getPropIdAsync(int mandant, int processId, string alias) {
            this.getPropIdAsync(mandant, processId, alias, null);
        }
        
        /// <remarks/>
        public void getPropIdAsync(int mandant, int processId, string alias, object userState) {
            if ((this.getPropIdOperationCompleted == null)) {
                this.getPropIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPropIdOperationCompleted);
            }
            this.InvokeAsync("getPropId", new object[] {
                        mandant,
                        processId,
                        alias}, this.getPropIdOperationCompleted, userState);
        }
        
        private void OngetPropIdOperationCompleted(object arg) {
            if ((this.getPropIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPropIdCompleted(this, new getPropIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="urn:IdPVi", ResponseNamespace="urn:IdPVi", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Response", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="urn:java/lang")]
        public System.Nullable<int>[] getPropIds(int mandant, int processId, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("String", Namespace="urn:java/lang")] string[] aliases) {
            object[] results = this.Invoke("getPropIds", new object[] {
                        mandant,
                        processId,
                        aliases});
            return ((System.Nullable<int>[])(results[0]));
        }
        
        /// <remarks/>
        public void getPropIdsAsync(int mandant, int processId, string[] aliases) {
            this.getPropIdsAsync(mandant, processId, aliases, null);
        }
        
        /// <remarks/>
        public void getPropIdsAsync(int mandant, int processId, string[] aliases, object userState) {
            if ((this.getPropIdsOperationCompleted == null)) {
                this.getPropIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPropIdsOperationCompleted);
            }
            this.InvokeAsync("getPropIds", new object[] {
                        mandant,
                        processId,
                        aliases}, this.getPropIdsOperationCompleted, userState);
        }
        
        private void OngetPropIdsOperationCompleted(object arg) {
            if ((this.getPropIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPropIdsCompleted(this, new getPropIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="urn:IdPVi", ResponseNamespace="urn:IdPVi", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Response")]
        public int getPropVarId(int mandant, int processId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string alias) {
            object[] results = this.Invoke("getPropVarId", new object[] {
                        mandant,
                        processId,
                        alias});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getPropVarIdAsync(int mandant, int processId, string alias) {
            this.getPropVarIdAsync(mandant, processId, alias, null);
        }
        
        /// <remarks/>
        public void getPropVarIdAsync(int mandant, int processId, string alias, object userState) {
            if ((this.getPropVarIdOperationCompleted == null)) {
                this.getPropVarIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPropVarIdOperationCompleted);
            }
            this.InvokeAsync("getPropVarId", new object[] {
                        mandant,
                        processId,
                        alias}, this.getPropVarIdOperationCompleted, userState);
        }
        
        private void OngetPropVarIdOperationCompleted(object arg) {
            if ((this.getPropVarIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPropVarIdCompleted(this, new getPropVarIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="urn:IdPVi", ResponseNamespace="urn:IdPVi", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Response", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="urn:java/lang")]
        public System.Nullable<int>[] getPropVarIds(int mandant, int processId, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("String", Namespace="urn:java/lang")] string[] aliases) {
            object[] results = this.Invoke("getPropVarIds", new object[] {
                        mandant,
                        processId,
                        aliases});
            return ((System.Nullable<int>[])(results[0]));
        }
        
        /// <remarks/>
        public void getPropVarIdsAsync(int mandant, int processId, string[] aliases) {
            this.getPropVarIdsAsync(mandant, processId, aliases, null);
        }
        
        /// <remarks/>
        public void getPropVarIdsAsync(int mandant, int processId, string[] aliases, object userState) {
            if ((this.getPropVarIdsOperationCompleted == null)) {
                this.getPropVarIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPropVarIdsOperationCompleted);
            }
            this.InvokeAsync("getPropVarIds", new object[] {
                        mandant,
                        processId,
                        aliases}, this.getPropVarIdsOperationCompleted, userState);
        }
        
        private void OngetPropVarIdsOperationCompleted(object arg) {
            if ((this.getPropVarIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPropVarIdsCompleted(this, new getPropVarIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="urn:IdPVi", ResponseNamespace="urn:IdPVi", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Response")]
        public int getVarId(int mandant, int processId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string alias) {
            object[] results = this.Invoke("getVarId", new object[] {
                        mandant,
                        processId,
                        alias});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getVarIdAsync(int mandant, int processId, string alias) {
            this.getVarIdAsync(mandant, processId, alias, null);
        }
        
        /// <remarks/>
        public void getVarIdAsync(int mandant, int processId, string alias, object userState) {
            if ((this.getVarIdOperationCompleted == null)) {
                this.getVarIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVarIdOperationCompleted);
            }
            this.InvokeAsync("getVarId", new object[] {
                        mandant,
                        processId,
                        alias}, this.getVarIdOperationCompleted, userState);
        }
        
        private void OngetVarIdOperationCompleted(object arg) {
            if ((this.getVarIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVarIdCompleted(this, new getVarIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="urn:IdPVi", ResponseNamespace="urn:IdPVi", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Response", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="urn:java/lang")]
        public System.Nullable<int>[] getVarIds(int mandant, int processId, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("String", Namespace="urn:java/lang")] string[] aliases) {
            object[] results = this.Invoke("getVarIds", new object[] {
                        mandant,
                        processId,
                        aliases});
            return ((System.Nullable<int>[])(results[0]));
        }
        
        /// <remarks/>
        public void getVarIdsAsync(int mandant, int processId, string[] aliases) {
            this.getVarIdsAsync(mandant, processId, aliases, null);
        }
        
        /// <remarks/>
        public void getVarIdsAsync(int mandant, int processId, string[] aliases, object userState) {
            if ((this.getVarIdsOperationCompleted == null)) {
                this.getVarIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVarIdsOperationCompleted);
            }
            this.InvokeAsync("getVarIds", new object[] {
                        mandant,
                        processId,
                        aliases}, this.getVarIdsOperationCompleted, userState);
        }
        
        private void OngetVarIdsOperationCompleted(object arg) {
            if ((this.getVarIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVarIdsCompleted(this, new getVarIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="urn:IdPVi", ResponseNamespace="urn:IdPVi", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Response", IsNullable=true)]
        public string getMessage() {
            object[] results = this.Invoke("getMessage", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMessageAsync() {
            this.getMessageAsync(null);
        }
        
        /// <remarks/>
        public void getMessageAsync(object userState) {
            if ((this.getMessageOperationCompleted == null)) {
                this.getMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMessageOperationCompleted);
            }
            this.InvokeAsync("getMessage", new object[0], this.getMessageOperationCompleted, userState);
        }
        
        private void OngetMessageOperationCompleted(object arg) {
            if ((this.getMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMessageCompleted(this, new getMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getImplicitIdCompletedEventHandler(object sender, getImplicitIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImplicitIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImplicitIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getImplicitIdsCompletedEventHandler(object sender, getImplicitIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImplicitIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImplicitIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<int>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getProcessIdCompletedEventHandler(object sender, getProcessIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProcessIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProcessIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getProcessIdsCompletedEventHandler(object sender, getProcessIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProcessIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProcessIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<int>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getPropIdCompletedEventHandler(object sender, getPropIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPropIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPropIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getPropIdsCompletedEventHandler(object sender, getPropIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPropIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPropIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<int>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getPropVarIdCompletedEventHandler(object sender, getPropVarIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPropVarIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPropVarIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getPropVarIdsCompletedEventHandler(object sender, getPropVarIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPropVarIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPropVarIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<int>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getVarIdCompletedEventHandler(object sender, getVarIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVarIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVarIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getVarIdsCompletedEventHandler(object sender, getVarIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVarIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVarIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<int>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getMessageCompletedEventHandler(object sender, getMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591