<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GraphQL.NewtonsoftJson</name>
    </assembly>
    <members>
        <member name="T:GraphQL.NewtonsoftJson.DocumentWriter">
            <summary>
            Serializes an <see cref="T:GraphQL.ExecutionResult"/> (or any other object) to a stream using
            the <see cref="N:Newtonsoft.Json"/> library.
            </summary>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.DocumentWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GraphQL.NewtonsoftJson.DocumentWriter"/> class with default settings:
            no indenting and a default instance of the <see cref="T:GraphQL.Execution.ErrorInfoProvider"/> class.
            </summary>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.DocumentWriter.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GraphQL.NewtonsoftJson.DocumentWriter"/> class with the specified settings
            and a default instance of the <see cref="T:GraphQL.Execution.ErrorInfoProvider"/> class.
            </summary>
            <param name="indent">Indicates if child objects should be indented</param>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.DocumentWriter.#ctor(System.Boolean,GraphQL.Execution.IErrorInfoProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:GraphQL.NewtonsoftJson.DocumentWriter"/> class with the specified settings.
            </summary>
            <param name="indent">Indicates if child objects should be indented</param>
            <param name="errorInfoProvider">Specifies the <see cref="T:GraphQL.Execution.IErrorInfoProvider"/> instance to use to serialize GraphQL errors</param>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.DocumentWriter.#ctor(GraphQL.Execution.IErrorInfoProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:GraphQL.NewtonsoftJson.DocumentWriter"/> class with no indenting and the
            specified <see cref="T:GraphQL.Execution.IErrorInfoProvider"/>.
            </summary>
            <param name="errorInfoProvider">Specifies the <see cref="T:GraphQL.Execution.IErrorInfoProvider"/> instance to use to serialize GraphQL errors</param>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.DocumentWriter.#ctor(System.Action{Newtonsoft.Json.JsonSerializerSettings})">
            <summary>
            Initializes a new instance of the <see cref="T:GraphQL.NewtonsoftJson.DocumentWriter"/> class configured with the specified callback.
            Configuration defaults to no indenting and a default instance of the <see cref="T:GraphQL.Execution.ErrorInfoProvider"/> class.
            </summary>
            <param name="configureSerializerSettings">Specifies a callback used to configure the JSON serializer</param>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.DocumentWriter.#ctor(Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:GraphQL.NewtonsoftJson.DocumentWriter"/> class with the specified settings
            and a default instance of the <see cref="T:GraphQL.Execution.ErrorInfoProvider"/> class.
            </summary>
            <param name="serializerSettings">Specifies the JSON serializer settings</param>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.DocumentWriter.#ctor(Newtonsoft.Json.JsonSerializerSettings,GraphQL.Execution.IErrorInfoProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:GraphQL.NewtonsoftJson.DocumentWriter"/> class with the specified settings.
            </summary>
            <param name="serializerSettings">Specifies the JSON serializer settings</param>
            <param name="errorInfoProvider">Specifies the <see cref="T:GraphQL.Execution.IErrorInfoProvider"/> instance to use to serialize GraphQL errors</param>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.DocumentWriter.#ctor(System.Action{Newtonsoft.Json.JsonSerializerSettings},GraphQL.Execution.IErrorInfoProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:GraphQL.NewtonsoftJson.DocumentWriter"/> class with the specified settings.
            Configuration defaults to no indenting and the specified instance of the <see cref="T:GraphQL.Execution.ErrorInfoProvider"/> class.
            </summary>
            <param name="configureSerializerSettings">Specifies a callback used to configure the JSON serializer</param>
            <param name="errorInfoProvider">Specifies the <see cref="T:GraphQL.Execution.IErrorInfoProvider"/> instance to use to serialize GraphQL errors</param>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.DocumentWriter.WriteAsync``1(System.IO.Stream,``0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:GraphQL.NewtonsoftJson.ExecutionResultJsonConverter">
            <summary>
            Converts an instance of <see cref="T:GraphQL.ExecutionResult"/> to JSON. Doesn't support read from JSON.
            </summary>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.ExecutionResultJsonConverter.#ctor(GraphQL.Execution.IErrorInfoProvider)">
            <summary>
            Initializes a new instance with the specified <see cref="T:GraphQL.Execution.IErrorInfoProvider"/>.
            </summary>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.ExecutionResultJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.ExecutionResultJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            This JSON converter does not support reading.
            </summary>
        </member>
        <member name="P:GraphQL.NewtonsoftJson.ExecutionResultJsonConverter.CanRead">
            <inheritdoc/>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.ExecutionResultJsonConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:GraphQL.NewtonsoftJson.GraphQLBuilderExtensions">
            <inheritdoc cref="T:GraphQL.GraphQLBuilderExtensions"/>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.GraphQLBuilderExtensions.AddNewtonsoftJson(GraphQL.DI.IGraphQLBuilder,System.Action{Newtonsoft.Json.JsonSerializerSettings})">
            <summary>
            Registers the Newtonsoft.Json <see cref="T:GraphQL.NewtonsoftJson.DocumentWriter"/> as a singleton of type
            <see cref="T:GraphQL.IDocumentWriter"/> within the dependency injection framework and configures
            it with the specified configuration delegate.
            </summary>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.GraphQLBuilderExtensions.AddNewtonsoftJson(GraphQL.DI.IGraphQLBuilder,System.Action{Newtonsoft.Json.JsonSerializerSettings,System.IServiceProvider})">
            <inheritdoc cref="M:GraphQL.NewtonsoftJson.GraphQLBuilderExtensions.AddNewtonsoftJson(GraphQL.DI.IGraphQLBuilder,System.Action{Newtonsoft.Json.JsonSerializerSettings})"/>
        </member>
        <member name="T:GraphQL.NewtonsoftJson.HttpResponseStreamWriter">
            <summary>
            Writes to the <see cref="T:System.IO.Stream"/> using the supplied <see cref="P:GraphQL.NewtonsoftJson.HttpResponseStreamWriter.Encoding"/>.
            It does not write the BOM and also does not close the stream.
            </summary>
        </member>
        <member name="T:GraphQL.NewtonsoftJson.InputsConverter">
            <summary>
            A custom JsonConverter for reading an <see cref="T:GraphQL.Inputs"/> object.
            Doesn't support writing, but since <see cref="T:GraphQL.Inputs"/> implements
            <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2">IReadOnlyDictionary&lt;string, object&gt;</see>,
            serialization of <see cref="T:GraphQL.Inputs"/> is supported directly by Newtonsoft.Json.
            </summary>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.InputsConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.InputsConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            This JSON converter does not support writing.
            </summary>
        </member>
        <member name="P:GraphQL.NewtonsoftJson.InputsConverter.CanWrite">
            <inheritdoc/>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.InputsConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:GraphQL.NewtonsoftJson.SchemaExtensions">
            <summary>
            Provides extension methods for executing a document against a schema and returning a json-formatted response.
            </summary>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.SchemaExtensions.ExecuteAsync(GraphQL.Types.ISchema,System.Action{GraphQL.ExecutionOptions})">
            <summary>
            Configures an <see cref="T:GraphQL.ExecutionOptions"/> using the given <paramref name="configure"/> action
            then executes those options using the <paramref name="schema"/> and a <see cref="T:GraphQL.NewtonsoftJson.DocumentWriter"/>
            with indentation turned on.
            </summary>
            <param name="schema">A schema to use.</param>
            <param name="configure">An action that configures something to execute.</param>
            <returns>The JSON result as a string.</returns>
            <remarks>
            Useful for quickly executing something and "getting started".
            Part of the public API and should not be removed even if it has no references.
            </remarks>
        </member>
        <member name="T:GraphQL.NewtonsoftJson.StringExtensions">
            <summary>
            Provides extension methods to deserialize json strings into object dictionaries.
            </summary>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.StringExtensions.ToInputs(System.String)">
            <summary>
            Converts a JSON-formatted string into a dictionary.
            </summary>
            <param name="json">A JSON-formatted string.</param>
            <returns>Inputs.</returns>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.StringExtensions.ToInputs(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Converts a JSON object into a dictionary.
            </summary>
            <remarks>
            Used by GraphQL.Transports.AspNetCore.NewtonsoftJson project in server repo.
            </remarks>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.StringExtensions.ToDictionary(System.String)">
            <summary>
            Converts a JSON-formatted string into a dictionary.
            </summary>
            <param name="json">The json.</param>
            <returns>Returns a <c>null</c> if the object cannot be converted into a dictionary.</returns>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.StringExtensions.FromJson``1(System.String)">
            <summary>
            Deserializes a JSON-formatted string of data into the specified type.
            Any <see cref="T:GraphQL.Inputs"/> objects will be deserialized into the proper format.
            Property names are matched based on a case insensitive comparison (the default for Newtonsoft.Json).
            </summary>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.StringExtensions.FromJson``1(System.IO.Stream)">
            <summary>
            Deserializes a JSON-formatted stream of data into the specified type.
            Any <see cref="T:GraphQL.Inputs"/> objects will be deserialized into the proper format.
            Property names are matched based on a case insensitive comparison (the default for Newtonsoft.Json).
            </summary>
        </member>
        <member name="M:GraphQL.NewtonsoftJson.StringExtensions.GetValue(System.Object)">
            <summary>
            Gets the value contained in a JObject, JValue, JProperty or JArray.
            </summary>
            <param name="value">The object containing the value to extract.</param>
            <remarks>If the value is a recognized type, it is returned unaltered.</remarks>
        </member>
    </members>
</doc>
